[
  {
    "objectID": "blog_posts/2023-12-06/STAC (1).html",
    "href": "blog_posts/2023-12-06/STAC (1).html",
    "title": "Using the Microsoft Planetary Computer",
    "section": "",
    "text": "#Import Libraries\nimport numpy as np\nimport geopandas as gpd\nimport rioxarray as rioxr\nimport matplotlib.pyplot as plt\n\nfrom shapely.geometry import Polygon\n\n# used to access STAC catalogs\nfrom pystac_client import Client\n# used to sign items from the MPC STAC catalog\nimport planetary_computer\n\n# ----- other libraries for nice ouputs\nfrom IPython.display import Image"
  },
  {
    "objectID": "blog_posts/2023-12-06/STAC (1).html#access",
    "href": "blog_posts/2023-12-06/STAC (1).html#access",
    "title": "Using the Microsoft Planetary Computer",
    "section": "Access",
    "text": "Access\nWe use the Client function from the pystac_client package to access the catalog:\n\n# access catalog\ncatalog = Client.open(\n    \"https://planetarycomputer.microsoft.com/api/stac/v1\",\n    modifier=planetary_computer.sign_inplace,\n)\n\nThe modifier parameter is needed to access the data in the MPC catalog."
  },
  {
    "objectID": "blog_posts/2023-12-06/STAC (1).html#exploration",
    "href": "blog_posts/2023-12-06/STAC (1).html#exploration",
    "title": "Using the Microsoft Planetary Computer",
    "section": "Exploration",
    "text": "Exploration\nLet’s check out some of the catalog’s metadata:\n\n# metadata from the catalog\n#print('ID:', catalog.id)\nprint('Title:', catalog.title)\nprint('Description:', catalog.description)\n\nTitle: Microsoft Planetary Computer STAC API\nDescription: Searchable spatiotemporal metadata describing Earth science datasets hosted by the Microsoft Planetary Computer\n\n\nWe can access its collections by using the get_collections() method:\n\ncatalog.get_collections()\n\n&lt;generator object Client.get_collections at 0x72f428c48f20&gt;\n\n\nNotice the output of get_collections() is a generator. This is a special kind of lazy object in Python over which you can loop over like a list.\nUnlike a list, the items in a generator do not exist in memory until you explicitely iterate over them or convert them to a list. Let’s try getting the collections from the catalog again:\n\n# get collections and print their names\ncollections = list(catalog.get_collections())\n\nprint('Number of collections:', len(collections))\nprint(\"Collections IDs:\")\nfor collection in collections:\n    print('-', collection.id)\n\nNumber of collections: 122\nCollections IDs:\n- daymet-annual-pr\n- daymet-daily-hi\n- 3dep-seamless\n- 3dep-lidar-dsm\n- fia\n- sentinel-1-rtc\n- gridmet\n- daymet-annual-na\n- daymet-monthly-na\n- daymet-annual-hi\n- daymet-monthly-hi\n- daymet-monthly-pr\n- gnatsgo-tables\n- hgb\n- cop-dem-glo-30\n- cop-dem-glo-90\n- goes-cmi\n- terraclimate\n- nasa-nex-gddp-cmip6\n- gpm-imerg-hhr\n- gnatsgo-rasters\n- 3dep-lidar-hag\n- 3dep-lidar-intensity\n- 3dep-lidar-pointsourceid\n- mtbs\n- noaa-c-cap\n- 3dep-lidar-copc\n- modis-64A1-061\n- alos-fnf-mosaic\n- 3dep-lidar-returns\n- mobi\n- landsat-c2-l2\n- era5-pds\n- chloris-biomass\n- kaza-hydroforecast\n- planet-nicfi-analytic\n- modis-17A2H-061\n- modis-11A2-061\n- daymet-daily-pr\n- 3dep-lidar-dtm-native\n- 3dep-lidar-classification\n- 3dep-lidar-dtm\n- gap\n- modis-17A2HGF-061\n- planet-nicfi-visual\n- gbif\n- modis-17A3HGF-061\n- modis-09A1-061\n- alos-dem\n- alos-palsar-mosaic\n- deltares-water-availability\n- modis-16A3GF-061\n- modis-21A2-061\n- us-census\n- jrc-gsw\n- deltares-floods\n- modis-43A4-061\n- modis-09Q1-061\n- modis-14A1-061\n- hrea\n- modis-13Q1-061\n- modis-14A2-061\n- sentinel-2-l2a\n- modis-15A2H-061\n- modis-11A1-061\n- modis-15A3H-061\n- modis-13A1-061\n- daymet-daily-na\n- nrcan-landcover\n- modis-10A2-061\n- ecmwf-forecast\n- noaa-mrms-qpe-24h-pass2\n- sentinel-1-grd\n- nasadem\n- io-lulc\n- landsat-c2-l1\n- drcog-lulc\n- chesapeake-lc-7\n- chesapeake-lc-13\n- chesapeake-lu\n- noaa-mrms-qpe-1h-pass1\n- noaa-mrms-qpe-1h-pass2\n- noaa-nclimgrid-monthly\n- goes-glm\n- usda-cdl\n- eclipse\n- esa-cci-lc\n- esa-cci-lc-netcdf\n- fws-nwi\n- usgs-lcmap-conus-v13\n- usgs-lcmap-hawaii-v10\n- noaa-climate-normals-tabular\n- noaa-climate-normals-netcdf\n- noaa-climate-normals-gridded\n- aster-l1t\n- cil-gdpcir-cc-by-sa\n- io-lulc-9-class\n- io-biodiversity\n- naip\n- noaa-cdr-sea-surface-temperature-whoi\n- noaa-cdr-ocean-heat-content\n- cil-gdpcir-cc0\n- cil-gdpcir-cc-by\n- noaa-cdr-sea-surface-temperature-whoi-netcdf\n- noaa-cdr-sea-surface-temperature-optimum-interpolation\n- modis-10A1-061\n- sentinel-5p-l2-netcdf\n- sentinel-3-olci-wfr-l2-netcdf\n- noaa-cdr-ocean-heat-content-netcdf\n- sentinel-3-synergy-aod-l2-netcdf\n- sentinel-3-synergy-v10-l2-netcdf\n- sentinel-3-olci-lfr-l2-netcdf\n- sentinel-3-sral-lan-l2-netcdf\n- sentinel-3-slstr-lst-l2-netcdf\n- sentinel-3-slstr-wst-l2-netcdf\n- sentinel-3-sral-wat-l2-netcdf\n- ms-buildings\n- sentinel-3-slstr-frp-l2-netcdf\n- sentinel-3-synergy-syn-l2-netcdf\n- sentinel-3-synergy-vgp-l2-netcdf\n- sentinel-3-synergy-vg1-l2-netcdf\n- esa-worldcover"
  },
  {
    "objectID": "blog_posts/2023-12-06/STAC (1).html#exercise",
    "href": "blog_posts/2023-12-06/STAC (1).html#exercise",
    "title": "Using the Microsoft Planetary Computer",
    "section": "Exercise:",
    "text": "Exercise:\nThe ‘cop-dem-glo-90’ collection contains the Copernicus DEM at 90m resolution (the data we previously used for the Grand Canyon).\n\nReuse the bbox for Santa Barbara to look for items in this collection.\nGet the first item in the search and check its assets.\nCheck the item’s rendered preview asset by clicking on it’s URL.\nOpen the item’s data using rioxarray.\n\n\n#Reuse the bbox for Santa Barbara to look for items in this collection.\n#Catalog Search:\nsearch_1 = catalog.search(\n    collections = ['cop-dem-glo-90'],\n    intersects = bbox)\n\n\n#Check the collection\nitems_1 = search_1.item_collection()\n\n\n#Get the first item in the search.\nC_DEM = items_1[0]\n#check its assets\nC_DEM.assets\n\n{'data': &lt;Asset href=https://elevationeuwest.blob.core.windows.net/copernicus-dem/COP90_hh/Copernicus_DSM_COG_30_N34_00_W120_00_DEM.tif?st=2023-12-05T20%3A43%3A51Z&se=2023-12-13T20%3A43%3A52Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-12-06T20%3A43%3A50Z&ske=2023-12-13T20%3A43%3A50Z&sks=b&skv=2021-06-08&sig=0yTIfzgRp2a89msKT6w3F2XfJHiO%2BvCfPi04Zwi6vJQ%3D&gt;,\n 'tilejson': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=cop-dem-glo-90&item=Copernicus_DSM_COG_30_N34_00_W120_00_DEM&assets=data&colormap_name=terrain&rescale=-1000%2C4000&format=png&gt;,\n 'rendered_preview': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=cop-dem-glo-90&item=Copernicus_DSM_COG_30_N34_00_W120_00_DEM&assets=data&colormap_name=terrain&rescale=-1000%2C4000&format=png&gt;}\n\n\n\nfor key in C_DEM.assets.keys():\n    print(key, '--', C_DEM.assets[key].title)\n\ndata -- N34_00_W120_00\ntilejson -- TileJSON with default rendering\nrendered_preview -- Rendered preview\n\n\n\n# Check the item’s rendered preview asset by clicking on it’s URL.\nImage(url=C_DEM.assets['rendered_preview'].href, width=500)\n\n\n\n\n\n#Open the item’s data using rioxarray.\nDEM = rioxr.open_rasterio(C_DEM.assets['data'].href)\nDEM\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray (band: 1, y: 1200, x: 1200)&gt;\n[1440000 values with dtype=float32]\nCoordinates:\n  * band         (band) int64 1\n  * x            (x) float64 -120.0 -120.0 -120.0 ... -119.0 -119.0 -119.0\n  * y            (y) float64 35.0 35.0 35.0 35.0 35.0 ... 34.0 34.0 34.0 34.0\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:  Point\n    scale_factor:   1.0\n    add_offset:     0.0xarray.DataArrayband: 1y: 1200x: 1200...[1440000 values with dtype=float32]Coordinates: (4)band(band)int641array([1])x(x)float64-120.0 -120.0 ... -119.0 -119.0array([-120.      , -119.999167, -119.998333, ..., -119.0025  , -119.001667,\n       -119.000833])y(y)float6435.0 35.0 35.0 ... 34.0 34.0 34.0array([35.      , 34.999167, 34.998333, ..., 34.0025  , 34.001667, 34.000833])spatial_ref()int640crs_wkt :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984grid_mapping_name :latitude_longitudespatial_ref :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]GeoTransform :-120.00041666666667 0.0008333333333333334 0.0 35.000416666666666 0.0 -0.0008333333333333334array(0)Indexes: (3)bandPandasIndexPandasIndex(Index([1], dtype='int64', name='band'))xPandasIndexPandasIndex(Index([             -120.0, -119.99916666666667, -119.99833333333333,\n                 -119.9975, -119.99666666666667, -119.99583333333334,\n                  -119.995, -119.99416666666667, -119.99333333333334,\n                 -119.9925,\n       ...\n       -119.00833333333334,           -119.0075, -119.00666666666666,\n       -119.00583333333333,            -119.005, -119.00416666666666,\n       -119.00333333333333,           -119.0025, -119.00166666666667,\n       -119.00083333333333],\n      dtype='float64', name='x', length=1200))yPandasIndexPandasIndex(Index([              35.0,  34.99916666666667, 34.998333333333335,\n                  34.9975,  34.99666666666667,  34.99583333333333,\n                   34.995, 34.994166666666665,  34.99333333333333,\n                  34.9925,\n       ...\n        34.00833333333333,            34.0075,  34.00666666666667,\n       34.005833333333335,             34.005,  34.00416666666667,\n        34.00333333333333,            34.0025, 34.001666666666665,\n        34.00083333333333],\n      dtype='float64', name='y', length=1200))Attributes: (3)AREA_OR_POINT :Pointscale_factor :1.0add_offset :0.0"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Heather Childers",
    "section": "",
    "text": "This is a skeleton of my website that will be filled in as I continue my progress throughout the MEDS program.\nSTAY TUNED!"
  },
  {
    "objectID": "index.html#hello",
    "href": "index.html#hello",
    "title": "Heather Childers",
    "section": "",
    "text": "This is a skeleton of my website that will be filled in as I continue my progress throughout the MEDS program.\nSTAY TUNED!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "A little bit about me…\nI am a graduate student at the Bren School of Environmental Science & Management pursuing a Master of Environmental Data Science degree. I recently graduated from the University of California, Davis, with a Bachelor of Science in Biological and Agricultural Engineering and a minor in Atmospheric Science. While at UC Davis, I worked with a team of undergraduate students to complete an 11-month capstone project for the College of Engineering. My team developed a solid-state fermentation bioreactor to scale up the production of protein-enriched animal feed from almond hulls. Outside of class, I enjoyed being active in the UC Davis community as President of the Society of Biological Engineers and Ambassador for the Department of Biological and Agricultural Engineering. I have continued my community involvement at UCSB as a Social Co-chair for the Womxn in Science and Engineering club and a MEDS Class Co-chair. My goal is to become a leader in the scientific community and create comprehensive climate models that contextualize the impacts of global climate change."
  },
  {
    "objectID": "blogs.html",
    "href": "blogs.html",
    "title": "Blog Posts",
    "section": "",
    "text": "Here is where I will include blog posts from my Master of Environmental Data Science Program\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing the Microsoft Planetary Computer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMy First Blog Post\n\n\n\nR\n\n\nQuarto\n\n\nMEDS\n\n\n\nThis is for a short description of the post\n\n\n\nHeather Childers\n\n\nNov 6, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources",
    "section": "",
    "text": "All my favorite resources!"
  }
]